{"ast":null,"code":"export const filterNames = new Set([\"first\", \"last\", \"eq\", \"gt\", \"nth\", \"lt\", \"even\", \"odd\"]);\nexport function isFilter(s) {\n  if (s.type !== \"pseudo\") return false;\n  if (filterNames.has(s.name)) return true;\n\n  if (s.name === \"not\" && Array.isArray(s.data)) {\n    // Only consider `:not` with embedded filters\n    return s.data.some(s => s.some(isFilter));\n  }\n\n  return false;\n}\nexport function getLimit(filter, data, partLimit) {\n  const num = data != null ? parseInt(data, 10) : NaN;\n\n  switch (filter) {\n    case \"first\":\n      return 1;\n\n    case \"nth\":\n    case \"eq\":\n      return isFinite(num) ? num >= 0 ? num + 1 : Infinity : 0;\n\n    case \"lt\":\n      return isFinite(num) ? num >= 0 ? Math.min(num, partLimit) : Infinity : 0;\n\n    case \"gt\":\n      return isFinite(num) ? Infinity : 0;\n\n    case \"odd\":\n      return 2 * partLimit;\n\n    case \"even\":\n      return 2 * partLimit - 1;\n\n    case \"last\":\n    case \"not\":\n      return Infinity;\n  }\n}","map":{"version":3,"sources":["positionals.ts"],"names":[],"mappings":"AAYA,OAAO,MAAM,WAAW,GAAgB,IAAI,GAAJ,CAAgB,CACpD,OADoD,EAEpD,MAFoD,EAGpD,IAHoD,EAIpD,IAJoD,EAKpD,KALoD,EAMpD,IANoD,EAOpD,MAPoD,EAQpD,KARoD,CAAhB,CAAjC;AAgBP,OAAM,SAAU,QAAV,CAAmB,CAAnB,EAA8B;AAChC,MAAI,CAAC,CAAC,IAAF,KAAW,QAAf,EAAyB,OAAO,KAAP;AACzB,MAAI,WAAW,CAAC,GAAZ,CAAgB,CAAC,CAAC,IAAlB,CAAJ,EAA6B,OAAO,IAAP;;AAC7B,MAAI,CAAC,CAAC,IAAF,KAAW,KAAX,IAAoB,KAAK,CAAC,OAAN,CAAc,CAAC,CAAC,IAAhB,CAAxB,EAA+C;AAC3C;AACA,WAAO,CAAC,CAAC,IAAF,CAAO,IAAP,CAAa,CAAD,IAAO,CAAC,CAAC,IAAF,CAAO,QAAP,CAAnB,CAAP;AACH;;AAED,SAAO,KAAP;AACH;AAED,OAAM,SAAU,QAAV,CACF,MADE,EAEF,IAFE,EAGF,SAHE,EAGe;AAEjB,QAAM,GAAG,GAAG,IAAI,IAAI,IAAR,GAAe,QAAQ,CAAC,IAAD,EAAO,EAAP,CAAvB,GAAoC,GAAhD;;AAEA,UAAQ,MAAR;AACI,SAAK,OAAL;AACI,aAAO,CAAP;;AACJ,SAAK,KAAL;AACA,SAAK,IAAL;AACI,aAAO,QAAQ,CAAC,GAAD,CAAR,GAAiB,GAAG,IAAI,CAAP,GAAW,GAAG,GAAG,CAAjB,GAAqB,QAAtC,GAAkD,CAAzD;;AACJ,SAAK,IAAL;AACI,aAAO,QAAQ,CAAC,GAAD,CAAR,GACD,GAAG,IAAI,CAAP,GACI,IAAI,CAAC,GAAL,CAAS,GAAT,EAAc,SAAd,CADJ,GAEI,QAHH,GAID,CAJN;;AAKJ,SAAK,IAAL;AACI,aAAO,QAAQ,CAAC,GAAD,CAAR,GAAgB,QAAhB,GAA2B,CAAlC;;AACJ,SAAK,KAAL;AACI,aAAO,IAAI,SAAX;;AACJ,SAAK,MAAL;AACI,aAAO,IAAI,SAAJ,GAAgB,CAAvB;;AACJ,SAAK,MAAL;AACA,SAAK,KAAL;AACI,aAAO,QAAP;AApBR;AAsBH","sourceRoot":"https://raw.githubusercontent.com/cheeriojs/cheerio-select/ef063a6ca4c3f0d02d2fc3505e750b6fb81c448d/src/","sourcesContent":["export const filterNames = new Set([\n    \"first\",\n    \"last\",\n    \"eq\",\n    \"gt\",\n    \"nth\",\n    \"lt\",\n    \"even\",\n    \"odd\",\n]);\nexport function isFilter(s) {\n    if (s.type !== \"pseudo\")\n        return false;\n    if (filterNames.has(s.name))\n        return true;\n    if (s.name === \"not\" && Array.isArray(s.data)) {\n        // Only consider `:not` with embedded filters\n        return s.data.some((s) => s.some(isFilter));\n    }\n    return false;\n}\nexport function getLimit(filter, data, partLimit) {\n    const num = data != null ? parseInt(data, 10) : NaN;\n    switch (filter) {\n        case \"first\":\n            return 1;\n        case \"nth\":\n        case \"eq\":\n            return isFinite(num) ? (num >= 0 ? num + 1 : Infinity) : 0;\n        case \"lt\":\n            return isFinite(num)\n                ? num >= 0\n                    ? Math.min(num, partLimit)\n                    : Infinity\n                : 0;\n        case \"gt\":\n            return isFinite(num) ? Infinity : 0;\n        case \"odd\":\n            return 2 * partLimit;\n        case \"even\":\n            return 2 * partLimit - 1;\n        case \"last\":\n        case \"not\":\n            return Infinity;\n    }\n}\n//# sourceMappingURL=positionals.js.map"]},"metadata":{},"sourceType":"module"}