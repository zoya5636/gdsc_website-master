{"ast":null,"code":"/**\n * Methods for traversing the DOM structure.\n *\n * @module cheerio/traversing\n */\nimport { hasChildren, isDocument } from 'domhandler';\nimport * as select from 'cheerio-select';\nimport { domEach, isTag, isCheerio } from '../utils.js';\nimport { contains } from '../static.js';\nimport { getChildren, getSiblings, nextElementSibling, prevElementSibling, uniqueSort } from 'domutils';\nconst reSiblingSelector = /^\\s*[~+]/;\n/**\n * Get the descendants of each element in the current set of matched elements,\n * filtered by a selector, jQuery object, or element.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('#fruits').find('li').length;\n * //=> 3\n * $('#fruits').find($('.apple')).length;\n * //=> 1\n * ```\n *\n * @param selectorOrHaystack - Element to look for.\n * @returns The found elements.\n * @see {@link https://api.jquery.com/find/}\n */\n\nexport function find(selectorOrHaystack) {\n  var _a;\n\n  if (!selectorOrHaystack) {\n    return this._make([]);\n  }\n\n  const context = this.toArray();\n\n  if (typeof selectorOrHaystack !== 'string') {\n    const haystack = isCheerio(selectorOrHaystack) ? selectorOrHaystack.toArray() : [selectorOrHaystack];\n    return this._make(haystack.filter(elem => context.some(node => contains(node, elem))));\n  }\n\n  const elems = reSiblingSelector.test(selectorOrHaystack) ? context : this.children().toArray();\n  const options = {\n    context,\n    root: (_a = this._root) === null || _a === void 0 ? void 0 : _a[0],\n    // Pass options that are recognized by `cheerio-select`\n    xmlMode: this.options.xmlMode,\n    lowerCaseTags: this.options.lowerCaseTags,\n    lowerCaseAttributeNames: this.options.lowerCaseAttributeNames,\n    pseudos: this.options.pseudos,\n    quirksMode: this.options.quirksMode\n  };\n  return this._make(select.select(selectorOrHaystack, elems, options));\n}\n/**\n * Creates a matcher, using a particular mapping function. Matchers provide a\n * function that finds elements using a generating function, supporting filtering.\n *\n * @private\n * @param matchMap - Mapping function.\n * @returns - Function for wrapping generating functions.\n */\n\nfunction _getMatcher(matchMap) {\n  return function (fn, ...postFns) {\n    return function (selector) {\n      var _a;\n\n      let matched = matchMap(fn, this);\n\n      if (selector) {\n        matched = filterArray(matched, selector, this.options.xmlMode, (_a = this._root) === null || _a === void 0 ? void 0 : _a[0]);\n      }\n\n      return this._make( // Post processing is only necessary if there is more than one element.\n      this.length > 1 && matched.length > 1 ? postFns.reduce((elems, fn) => fn(elems), matched) : matched);\n    };\n  };\n}\n/** Matcher that adds multiple elements for each entry in the input. */\n\n\nconst _matcher = _getMatcher((fn, elems) => {\n  const ret = [];\n\n  for (let i = 0; i < elems.length; i++) {\n    const value = fn(elems[i]);\n    ret.push(value);\n  }\n\n  return new Array().concat(...ret);\n});\n/** Matcher that adds at most one element for each entry in the input. */\n\n\nconst _singleMatcher = _getMatcher((fn, elems) => {\n  const ret = [];\n\n  for (let i = 0; i < elems.length; i++) {\n    const value = fn(elems[i]);\n\n    if (value !== null) {\n      ret.push(value);\n    }\n  }\n\n  return ret;\n});\n/**\n * Matcher that supports traversing until a condition is met.\n *\n * @returns A function usable for `*Until` methods.\n */\n\n\nfunction _matchUntil(nextElem, ...postFns) {\n  // We use a variable here that is used from within the matcher.\n  let matches = null;\n\n  const innerMatcher = _getMatcher((nextElem, elems) => {\n    const matched = [];\n    domEach(elems, elem => {\n      for (let next; next = nextElem(elem); elem = next) {\n        // FIXME: `matched` might contain duplicates here and the index is too large.\n        if (matches === null || matches === void 0 ? void 0 : matches(next, matched.length)) break;\n        matched.push(next);\n      }\n    });\n    return matched;\n  })(nextElem, ...postFns);\n\n  return function (selector, filterSelector) {\n    // Override `matches` variable with the new target.\n    matches = typeof selector === 'string' ? elem => select.is(elem, selector, this.options) : selector ? getFilterFn(selector) : null;\n    const ret = innerMatcher.call(this, filterSelector); // Set `matches` to `null`, so we don't waste memory.\n\n    matches = null;\n    return ret;\n  };\n}\n\nfunction _removeDuplicates(elems) {\n  return Array.from(new Set(elems));\n}\n/**\n * Get the parent of each element in the current set of matched elements,\n * optionally filtered by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.pear').parent().attr('id');\n * //=> fruits\n * ```\n *\n * @param selector - If specified filter for parent.\n * @returns The parents.\n * @see {@link https://api.jquery.com/parent/}\n */\n\n\nexport const parent = _singleMatcher(({\n  parent\n}) => parent && !isDocument(parent) ? parent : null, _removeDuplicates);\n/**\n * Get a set of parents filtered by `selector` of each element in the current\n * set of match elements.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.orange').parents().length;\n * //=> 2\n * $('.orange').parents('#fruits').length;\n * //=> 1\n * ```\n *\n * @param selector - If specified filter for parents.\n * @returns The parents.\n * @see {@link https://api.jquery.com/parents/}\n */\n\nexport const parents = _matcher(elem => {\n  const matched = [];\n\n  while (elem.parent && !isDocument(elem.parent)) {\n    matched.push(elem.parent);\n    elem = elem.parent;\n  }\n\n  return matched;\n}, uniqueSort, elems => elems.reverse());\n/**\n * Get the ancestors of each element in the current set of matched elements, up\n * to but not including the element matched by the selector, DOM node, or cheerio object.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.orange').parentsUntil('#food').length;\n * //=> 1\n * ```\n *\n * @param selector - Selector for element to stop at.\n * @param filterSelector - Optional filter for parents.\n * @returns The parents.\n * @see {@link https://api.jquery.com/parentsUntil/}\n */\n\nexport const parentsUntil = _matchUntil(({\n  parent\n}) => parent && !isDocument(parent) ? parent : null, uniqueSort, elems => elems.reverse());\n/**\n * For each element in the set, get the first element that matches the selector\n * by testing the element itself and traversing up through its ancestors in the DOM tree.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.orange').closest();\n * //=> []\n *\n * $('.orange').closest('.apple');\n * // => []\n *\n * $('.orange').closest('li');\n * //=> [<li class=\"orange\">Orange</li>]\n *\n * $('.orange').closest('#fruits');\n * //=> [<ul id=\"fruits\"> ... </ul>]\n * ```\n *\n * @param selector - Selector for the element to find.\n * @returns The closest nodes.\n * @see {@link https://api.jquery.com/closest/}\n */\n\nexport function closest(selector) {\n  var _a;\n\n  const set = [];\n\n  if (!selector) {\n    return this._make(set);\n  }\n\n  const selectOpts = {\n    xmlMode: this.options.xmlMode,\n    root: (_a = this._root) === null || _a === void 0 ? void 0 : _a[0]\n  };\n  const selectFn = typeof selector === 'string' ? elem => select.is(elem, selector, selectOpts) : getFilterFn(selector);\n  domEach(this, elem => {\n    while (elem && isTag(elem)) {\n      if (selectFn(elem, 0)) {\n        // Do not add duplicate elements to the set\n        if (!set.includes(elem)) {\n          set.push(elem);\n        }\n\n        break;\n      }\n\n      elem = elem.parent;\n    }\n  });\n  return this._make(set);\n}\n/**\n * Gets the next sibling of the first selected element, optionally filtered by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.apple').next().hasClass('orange');\n * //=> true\n * ```\n *\n * @param selector - If specified filter for sibling.\n * @returns The next nodes.\n * @see {@link https://api.jquery.com/next/}\n */\n\nexport const next = _singleMatcher(elem => nextElementSibling(elem));\n/**\n * Gets all the following siblings of the first selected element, optionally\n * filtered by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.apple').nextAll();\n * //=> [<li class=\"orange\">Orange</li>, <li class=\"pear\">Pear</li>]\n * $('.apple').nextAll('.orange');\n * //=> [<li class=\"orange\">Orange</li>]\n * ```\n *\n * @param selector - If specified filter for siblings.\n * @returns The next nodes.\n * @see {@link https://api.jquery.com/nextAll/}\n */\n\nexport const nextAll = _matcher(elem => {\n  const matched = [];\n\n  while (elem.next) {\n    elem = elem.next;\n    if (isTag(elem)) matched.push(elem);\n  }\n\n  return matched;\n}, _removeDuplicates);\n/**\n * Gets all the following siblings up to but not including the element matched\n * by the selector, optionally filtered by another selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.apple').nextUntil('.pear');\n * //=> [<li class=\"orange\">Orange</li>]\n * ```\n *\n * @param selector - Selector for element to stop at.\n * @param filterSelector - If specified filter for siblings.\n * @returns The next nodes.\n * @see {@link https://api.jquery.com/nextUntil/}\n */\n\nexport const nextUntil = _matchUntil(el => nextElementSibling(el), _removeDuplicates);\n/**\n * Gets the previous sibling of the first selected element optionally filtered\n * by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.orange').prev().hasClass('apple');\n * //=> true\n * ```\n *\n * @param selector - If specified filter for siblings.\n * @returns The previous nodes.\n * @see {@link https://api.jquery.com/prev/}\n */\n\nexport const prev = _singleMatcher(elem => prevElementSibling(elem));\n/**\n * Gets all the preceding siblings of the first selected element, optionally\n * filtered by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.pear').prevAll();\n * //=> [<li class=\"orange\">Orange</li>, <li class=\"apple\">Apple</li>]\n *\n * $('.pear').prevAll('.orange');\n * //=> [<li class=\"orange\">Orange</li>]\n * ```\n *\n * @param selector - If specified filter for siblings.\n * @returns The previous nodes.\n * @see {@link https://api.jquery.com/prevAll/}\n */\n\nexport const prevAll = _matcher(elem => {\n  const matched = [];\n\n  while (elem.prev) {\n    elem = elem.prev;\n    if (isTag(elem)) matched.push(elem);\n  }\n\n  return matched;\n}, _removeDuplicates);\n/**\n * Gets all the preceding siblings up to but not including the element matched\n * by the selector, optionally filtered by another selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.pear').prevUntil('.apple');\n * //=> [<li class=\"orange\">Orange</li>]\n * ```\n *\n * @param selector - Selector for element to stop at.\n * @param filterSelector - If specified filter for siblings.\n * @returns The previous nodes.\n * @see {@link https://api.jquery.com/prevUntil/}\n */\n\nexport const prevUntil = _matchUntil(el => prevElementSibling(el), _removeDuplicates);\n/**\n * Get the siblings of each element (excluding the element) in the set of\n * matched elements, optionally filtered by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.pear').siblings().length;\n * //=> 2\n *\n * $('.pear').siblings('.orange').length;\n * //=> 1\n * ```\n *\n * @param selector - If specified filter for siblings.\n * @returns The siblings.\n * @see {@link https://api.jquery.com/siblings/}\n */\n\nexport const siblings = _matcher(elem => getSiblings(elem).filter(el => isTag(el) && el !== elem), uniqueSort);\n/**\n * Gets the element children of each element in the set of matched elements.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('#fruits').children().length;\n * //=> 3\n *\n * $('#fruits').children('.pear').text();\n * //=> Pear\n * ```\n *\n * @param selector - If specified filter for children.\n * @returns The children.\n * @see {@link https://api.jquery.com/children/}\n */\n\nexport const children = _matcher(elem => getChildren(elem).filter(isTag), _removeDuplicates);\n/**\n * Gets the children of each element in the set of matched elements, including\n * text and comment nodes.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('#fruits').contents().length;\n * //=> 3\n * ```\n *\n * @returns The children.\n * @see {@link https://api.jquery.com/contents/}\n */\n\nexport function contents() {\n  const elems = this.toArray().reduce((newElems, elem) => hasChildren(elem) ? newElems.concat(elem.children) : newElems, []);\n  return this._make(elems);\n}\n/**\n * Iterates over a cheerio object, executing a function for each matched\n * element. When the callback is fired, the function is fired in the context of\n * the DOM element, so `this` refers to the current element, which is equivalent\n * to the function parameter `element`. To break out of the `each` loop early,\n * return with `false`.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * const fruits = [];\n *\n * $('li').each(function (i, elem) {\n *   fruits[i] = $(this).text();\n * });\n *\n * fruits.join(', ');\n * //=> Apple, Orange, Pear\n * ```\n *\n * @param fn - Function to execute.\n * @returns The instance itself, useful for chaining.\n * @see {@link https://api.jquery.com/each/}\n */\n\nexport function each(fn) {\n  let i = 0;\n  const len = this.length;\n\n  while (i < len && fn.call(this[i], i, this[i]) !== false) ++i;\n\n  return this;\n}\n/**\n * Pass each element in the current matched set through a function, producing a\n * new Cheerio object containing the return values. The function can return an\n * individual data item or an array of data items to be inserted into the\n * resulting set. If an array is returned, the elements inside the array are\n * inserted into the set. If the function returns null or undefined, no element\n * will be inserted.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('li')\n *   .map(function (i, el) {\n *     // this === el\n *     return $(this).text();\n *   })\n *   .toArray()\n *   .join(' ');\n * //=> \"apple orange pear\"\n * ```\n *\n * @param fn - Function to execute.\n * @returns The mapped elements, wrapped in a Cheerio collection.\n * @see {@link https://api.jquery.com/map/}\n */\n\nexport function map(fn) {\n  let elems = [];\n\n  for (let i = 0; i < this.length; i++) {\n    const el = this[i];\n    const val = fn.call(el, i, el);\n\n    if (val != null) {\n      elems = elems.concat(val);\n    }\n  }\n\n  return this._make(elems);\n}\n/**\n * Creates a function to test if a filter is matched.\n *\n * @param match - A filter.\n * @returns A function that determines if a filter has been matched.\n */\n\nfunction getFilterFn(match) {\n  if (typeof match === 'function') {\n    return (el, i) => match.call(el, i, el);\n  }\n\n  if (isCheerio(match)) {\n    return el => Array.prototype.includes.call(match, el);\n  }\n\n  return function (el) {\n    return match === el;\n  };\n}\n\nexport function filter(match) {\n  var _a;\n\n  return this._make(filterArray(this.toArray(), match, this.options.xmlMode, (_a = this._root) === null || _a === void 0 ? void 0 : _a[0]));\n}\nexport function filterArray(nodes, match, xmlMode, root) {\n  return typeof match === 'string' ? select.filter(match, nodes, {\n    xmlMode,\n    root\n  }) : nodes.filter(getFilterFn(match));\n}\n/**\n * Checks the current list of elements and returns `true` if _any_ of the\n * elements match the selector. If using an element or Cheerio selection,\n * returns `true` if _any_ of the elements match. If using a predicate function,\n * the function is executed in the context of the selected element, so `this`\n * refers to the current element.\n *\n * @category Attributes\n * @param selector - Selector for the selection.\n * @returns Whether or not the selector matches an element of the instance.\n * @see {@link https://api.jquery.com/is/}\n */\n\nexport function is(selector) {\n  const nodes = this.toArray();\n  return typeof selector === 'string' ? select.some(nodes.filter(isTag), selector, this.options) : selector ? nodes.some(getFilterFn(selector)) : false;\n}\n/**\n * Remove elements from the set of matched elements. Given a Cheerio object that\n * represents a set of DOM elements, the `.not()` method constructs a new\n * Cheerio object from a subset of the matching elements. The supplied selector\n * is tested against each element; the elements that don't match the selector\n * will be included in the result.\n *\n * The `.not()` method can take a function as its argument in the same way that\n * `.filter()` does. Elements for which the function returns `true` are excluded\n * from the filtered set; all other elements are included.\n *\n * @category Traversing\n * @example <caption>Selector</caption>\n *\n * ```js\n * $('li').not('.apple').length;\n * //=> 2\n * ```\n *\n * @example <caption>Function</caption>\n *\n * ```js\n * $('li').not(function (i, el) {\n *   // this === el\n *   return $(this).attr('class') === 'orange';\n * }).length; //=> 2\n * ```\n *\n * @param match - Value to look for, following the rules above.\n * @param container - Optional node to filter instead.\n * @returns The filtered collection.\n * @see {@link https://api.jquery.com/not/}\n */\n\nexport function not(match) {\n  let nodes = this.toArray();\n\n  if (typeof match === 'string') {\n    const matches = new Set(select.filter(match, nodes, this.options));\n    nodes = nodes.filter(el => !matches.has(el));\n  } else {\n    const filterFn = getFilterFn(match);\n    nodes = nodes.filter((el, i) => !filterFn(el, i));\n  }\n\n  return this._make(nodes);\n}\n/**\n * Filters the set of matched elements to only those which have the given DOM\n * element as a descendant or which have a descendant that matches the given\n * selector. Equivalent to `.filter(':has(selector)')`.\n *\n * @category Traversing\n * @example <caption>Selector</caption>\n *\n * ```js\n * $('ul').has('.pear').attr('id');\n * //=> fruits\n * ```\n *\n * @example <caption>Element</caption>\n *\n * ```js\n * $('ul').has($('.pear')[0]).attr('id');\n * //=> fruits\n * ```\n *\n * @param selectorOrHaystack - Element to look for.\n * @returns The filtered collection.\n * @see {@link https://api.jquery.com/has/}\n */\n\nexport function has(selectorOrHaystack) {\n  return this.filter(typeof selectorOrHaystack === 'string' ? // Using the `:has` selector here short-circuits searches.\n  `:has(${selectorOrHaystack})` : (_, el) => this._make(el).find(selectorOrHaystack).length > 0);\n}\n/**\n * Will select the first element of a cheerio object.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('#fruits').children().first().text();\n * //=> Apple\n * ```\n *\n * @returns The first element.\n * @see {@link https://api.jquery.com/first/}\n */\n\nexport function first() {\n  return this.length > 1 ? this._make(this[0]) : this;\n}\n/**\n * Will select the last element of a cheerio object.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('#fruits').children().last().text();\n * //=> Pear\n * ```\n *\n * @returns The last element.\n * @see {@link https://api.jquery.com/last/}\n */\n\nexport function last() {\n  return this.length > 0 ? this._make(this[this.length - 1]) : this;\n}\n/**\n * Reduce the set of matched elements to the one at the specified index. Use\n * `.eq(-i)` to count backwards from the last selected element.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('li').eq(0).text();\n * //=> Apple\n *\n * $('li').eq(-1).text();\n * //=> Pear\n * ```\n *\n * @param i - Index of the element to select.\n * @returns The element at the `i`th position.\n * @see {@link https://api.jquery.com/eq/}\n */\n\nexport function eq(i) {\n  var _a;\n\n  i = +i; // Use the first identity optimization if possible\n\n  if (i === 0 && this.length <= 1) return this;\n  if (i < 0) i = this.length + i;\n  return this._make((_a = this[i]) !== null && _a !== void 0 ? _a : []);\n}\nexport function get(i) {\n  if (i == null) {\n    return this.toArray();\n  }\n\n  return this[i < 0 ? this.length + i : i];\n}\n/**\n * Retrieve all the DOM elements contained in the jQuery set as an array.\n *\n * @example\n *\n * ```js\n * $('li').toArray();\n * //=> [ {...}, {...}, {...} ]\n * ```\n *\n * @returns The contained items.\n */\n\nexport function toArray() {\n  return Array.prototype.slice.call(this);\n}\n/**\n * Search for a given element from among the matched elements.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.pear').index();\n * //=> 2 $('.orange').index('li');\n * //=> 1\n * $('.apple').index($('#fruit, li'));\n * //=> 1\n * ```\n *\n * @param selectorOrNeedle - Element to look for.\n * @returns The index of the element.\n * @see {@link https://api.jquery.com/index/}\n */\n\nexport function index(selectorOrNeedle) {\n  let $haystack;\n  let needle;\n\n  if (selectorOrNeedle == null) {\n    $haystack = this.parent().children();\n    needle = this[0];\n  } else if (typeof selectorOrNeedle === 'string') {\n    $haystack = this._make(selectorOrNeedle);\n    needle = this[0];\n  } else {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    $haystack = this;\n    needle = isCheerio(selectorOrNeedle) ? selectorOrNeedle[0] : selectorOrNeedle;\n  }\n\n  return Array.prototype.indexOf.call($haystack, needle);\n}\n/**\n * Gets the elements matching the specified range (0-based position).\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('li').slice(1).eq(0).text();\n * //=> 'Orange'\n *\n * $('li').slice(1, 2).length;\n * //=> 1\n * ```\n *\n * @param start - A position at which the elements begin to be selected. If\n *   negative, it indicates an offset from the end of the set.\n * @param end - A position at which the elements stop being selected. If\n *   negative, it indicates an offset from the end of the set. If omitted, the\n *   range continues until the end of the set.\n * @returns The elements matching the specified range.\n * @see {@link https://api.jquery.com/slice/}\n */\n\nexport function slice(start, end) {\n  return this._make(Array.prototype.slice.call(this, start, end));\n}\n/**\n * End the most recent filtering operation in the current chain and return the\n * set of matched elements to its previous state.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('li').eq(0).end().length;\n * //=> 3\n * ```\n *\n * @returns The previous state of the set of matched elements.\n * @see {@link https://api.jquery.com/end/}\n */\n\nexport function end() {\n  var _a;\n\n  return (_a = this.prevObject) !== null && _a !== void 0 ? _a : this._make([]);\n}\n/**\n * Add elements to the set of matched elements.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.apple').add('.orange').length;\n * //=> 2\n * ```\n *\n * @param other - Elements to add.\n * @param context - Optionally the context of the new selection.\n * @returns The combined set.\n * @see {@link https://api.jquery.com/add/}\n */\n\nexport function add(other, context) {\n  const selection = this._make(other, context);\n\n  const contents = uniqueSort([...this.get(), ...selection.get()]);\n  return this._make(contents);\n}\n/**\n * Add the previous set of elements on the stack to the current set, optionally\n * filtered by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('li').eq(0).addBack('.orange').length;\n * //=> 2\n * ```\n *\n * @param selector - Selector for the elements to add.\n * @returns The combined set.\n * @see {@link https://api.jquery.com/addBack/}\n */\n\nexport function addBack(selector) {\n  return this.prevObject ? this.add(selector ? this.prevObject.filter(selector) : this.prevObject) : this;\n}","map":{"version":3,"sources":["api/traversing.ts"],"names":[],"mappings":"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","sourceRoot":"https://raw.githubusercontent.com/cheeriojs/cheerio/d1cbc66d53392ce8bf6cd0068f675836372d2bf3/src/","sourcesContent":["/**\n * Methods for traversing the DOM structure.\n *\n * @module cheerio/traversing\n */\nimport { hasChildren, isDocument, } from 'domhandler';\nimport * as select from 'cheerio-select';\nimport { domEach, isTag, isCheerio } from '../utils.js';\nimport { contains } from '../static.js';\nimport { getChildren, getSiblings, nextElementSibling, prevElementSibling, uniqueSort, } from 'domutils';\nconst reSiblingSelector = /^\\s*[~+]/;\n/**\n * Get the descendants of each element in the current set of matched elements,\n * filtered by a selector, jQuery object, or element.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('#fruits').find('li').length;\n * //=> 3\n * $('#fruits').find($('.apple')).length;\n * //=> 1\n * ```\n *\n * @param selectorOrHaystack - Element to look for.\n * @returns The found elements.\n * @see {@link https://api.jquery.com/find/}\n */\nexport function find(selectorOrHaystack) {\n    var _a;\n    if (!selectorOrHaystack) {\n        return this._make([]);\n    }\n    const context = this.toArray();\n    if (typeof selectorOrHaystack !== 'string') {\n        const haystack = isCheerio(selectorOrHaystack)\n            ? selectorOrHaystack.toArray()\n            : [selectorOrHaystack];\n        return this._make(haystack.filter((elem) => context.some((node) => contains(node, elem))));\n    }\n    const elems = reSiblingSelector.test(selectorOrHaystack)\n        ? context\n        : this.children().toArray();\n    const options = {\n        context,\n        root: (_a = this._root) === null || _a === void 0 ? void 0 : _a[0],\n        // Pass options that are recognized by `cheerio-select`\n        xmlMode: this.options.xmlMode,\n        lowerCaseTags: this.options.lowerCaseTags,\n        lowerCaseAttributeNames: this.options.lowerCaseAttributeNames,\n        pseudos: this.options.pseudos,\n        quirksMode: this.options.quirksMode,\n    };\n    return this._make(select.select(selectorOrHaystack, elems, options));\n}\n/**\n * Creates a matcher, using a particular mapping function. Matchers provide a\n * function that finds elements using a generating function, supporting filtering.\n *\n * @private\n * @param matchMap - Mapping function.\n * @returns - Function for wrapping generating functions.\n */\nfunction _getMatcher(matchMap) {\n    return function (fn, ...postFns) {\n        return function (selector) {\n            var _a;\n            let matched = matchMap(fn, this);\n            if (selector) {\n                matched = filterArray(matched, selector, this.options.xmlMode, (_a = this._root) === null || _a === void 0 ? void 0 : _a[0]);\n            }\n            return this._make(\n            // Post processing is only necessary if there is more than one element.\n            this.length > 1 && matched.length > 1\n                ? postFns.reduce((elems, fn) => fn(elems), matched)\n                : matched);\n        };\n    };\n}\n/** Matcher that adds multiple elements for each entry in the input. */\nconst _matcher = _getMatcher((fn, elems) => {\n    const ret = [];\n    for (let i = 0; i < elems.length; i++) {\n        const value = fn(elems[i]);\n        ret.push(value);\n    }\n    return new Array().concat(...ret);\n});\n/** Matcher that adds at most one element for each entry in the input. */\nconst _singleMatcher = _getMatcher((fn, elems) => {\n    const ret = [];\n    for (let i = 0; i < elems.length; i++) {\n        const value = fn(elems[i]);\n        if (value !== null) {\n            ret.push(value);\n        }\n    }\n    return ret;\n});\n/**\n * Matcher that supports traversing until a condition is met.\n *\n * @returns A function usable for `*Until` methods.\n */\nfunction _matchUntil(nextElem, ...postFns) {\n    // We use a variable here that is used from within the matcher.\n    let matches = null;\n    const innerMatcher = _getMatcher((nextElem, elems) => {\n        const matched = [];\n        domEach(elems, (elem) => {\n            for (let next; (next = nextElem(elem)); elem = next) {\n                // FIXME: `matched` might contain duplicates here and the index is too large.\n                if (matches === null || matches === void 0 ? void 0 : matches(next, matched.length))\n                    break;\n                matched.push(next);\n            }\n        });\n        return matched;\n    })(nextElem, ...postFns);\n    return function (selector, filterSelector) {\n        // Override `matches` variable with the new target.\n        matches =\n            typeof selector === 'string'\n                ? (elem) => select.is(elem, selector, this.options)\n                : selector\n                    ? getFilterFn(selector)\n                    : null;\n        const ret = innerMatcher.call(this, filterSelector);\n        // Set `matches` to `null`, so we don't waste memory.\n        matches = null;\n        return ret;\n    };\n}\nfunction _removeDuplicates(elems) {\n    return Array.from(new Set(elems));\n}\n/**\n * Get the parent of each element in the current set of matched elements,\n * optionally filtered by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.pear').parent().attr('id');\n * //=> fruits\n * ```\n *\n * @param selector - If specified filter for parent.\n * @returns The parents.\n * @see {@link https://api.jquery.com/parent/}\n */\nexport const parent = _singleMatcher(({ parent }) => (parent && !isDocument(parent) ? parent : null), _removeDuplicates);\n/**\n * Get a set of parents filtered by `selector` of each element in the current\n * set of match elements.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.orange').parents().length;\n * //=> 2\n * $('.orange').parents('#fruits').length;\n * //=> 1\n * ```\n *\n * @param selector - If specified filter for parents.\n * @returns The parents.\n * @see {@link https://api.jquery.com/parents/}\n */\nexport const parents = _matcher((elem) => {\n    const matched = [];\n    while (elem.parent && !isDocument(elem.parent)) {\n        matched.push(elem.parent);\n        elem = elem.parent;\n    }\n    return matched;\n}, uniqueSort, (elems) => elems.reverse());\n/**\n * Get the ancestors of each element in the current set of matched elements, up\n * to but not including the element matched by the selector, DOM node, or cheerio object.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.orange').parentsUntil('#food').length;\n * //=> 1\n * ```\n *\n * @param selector - Selector for element to stop at.\n * @param filterSelector - Optional filter for parents.\n * @returns The parents.\n * @see {@link https://api.jquery.com/parentsUntil/}\n */\nexport const parentsUntil = _matchUntil(({ parent }) => (parent && !isDocument(parent) ? parent : null), uniqueSort, (elems) => elems.reverse());\n/**\n * For each element in the set, get the first element that matches the selector\n * by testing the element itself and traversing up through its ancestors in the DOM tree.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.orange').closest();\n * //=> []\n *\n * $('.orange').closest('.apple');\n * // => []\n *\n * $('.orange').closest('li');\n * //=> [<li class=\"orange\">Orange</li>]\n *\n * $('.orange').closest('#fruits');\n * //=> [<ul id=\"fruits\"> ... </ul>]\n * ```\n *\n * @param selector - Selector for the element to find.\n * @returns The closest nodes.\n * @see {@link https://api.jquery.com/closest/}\n */\nexport function closest(selector) {\n    var _a;\n    const set = [];\n    if (!selector) {\n        return this._make(set);\n    }\n    const selectOpts = {\n        xmlMode: this.options.xmlMode,\n        root: (_a = this._root) === null || _a === void 0 ? void 0 : _a[0],\n    };\n    const selectFn = typeof selector === 'string'\n        ? (elem) => select.is(elem, selector, selectOpts)\n        : getFilterFn(selector);\n    domEach(this, (elem) => {\n        while (elem && isTag(elem)) {\n            if (selectFn(elem, 0)) {\n                // Do not add duplicate elements to the set\n                if (!set.includes(elem)) {\n                    set.push(elem);\n                }\n                break;\n            }\n            elem = elem.parent;\n        }\n    });\n    return this._make(set);\n}\n/**\n * Gets the next sibling of the first selected element, optionally filtered by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.apple').next().hasClass('orange');\n * //=> true\n * ```\n *\n * @param selector - If specified filter for sibling.\n * @returns The next nodes.\n * @see {@link https://api.jquery.com/next/}\n */\nexport const next = _singleMatcher((elem) => nextElementSibling(elem));\n/**\n * Gets all the following siblings of the first selected element, optionally\n * filtered by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.apple').nextAll();\n * //=> [<li class=\"orange\">Orange</li>, <li class=\"pear\">Pear</li>]\n * $('.apple').nextAll('.orange');\n * //=> [<li class=\"orange\">Orange</li>]\n * ```\n *\n * @param selector - If specified filter for siblings.\n * @returns The next nodes.\n * @see {@link https://api.jquery.com/nextAll/}\n */\nexport const nextAll = _matcher((elem) => {\n    const matched = [];\n    while (elem.next) {\n        elem = elem.next;\n        if (isTag(elem))\n            matched.push(elem);\n    }\n    return matched;\n}, _removeDuplicates);\n/**\n * Gets all the following siblings up to but not including the element matched\n * by the selector, optionally filtered by another selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.apple').nextUntil('.pear');\n * //=> [<li class=\"orange\">Orange</li>]\n * ```\n *\n * @param selector - Selector for element to stop at.\n * @param filterSelector - If specified filter for siblings.\n * @returns The next nodes.\n * @see {@link https://api.jquery.com/nextUntil/}\n */\nexport const nextUntil = _matchUntil((el) => nextElementSibling(el), _removeDuplicates);\n/**\n * Gets the previous sibling of the first selected element optionally filtered\n * by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.orange').prev().hasClass('apple');\n * //=> true\n * ```\n *\n * @param selector - If specified filter for siblings.\n * @returns The previous nodes.\n * @see {@link https://api.jquery.com/prev/}\n */\nexport const prev = _singleMatcher((elem) => prevElementSibling(elem));\n/**\n * Gets all the preceding siblings of the first selected element, optionally\n * filtered by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.pear').prevAll();\n * //=> [<li class=\"orange\">Orange</li>, <li class=\"apple\">Apple</li>]\n *\n * $('.pear').prevAll('.orange');\n * //=> [<li class=\"orange\">Orange</li>]\n * ```\n *\n * @param selector - If specified filter for siblings.\n * @returns The previous nodes.\n * @see {@link https://api.jquery.com/prevAll/}\n */\nexport const prevAll = _matcher((elem) => {\n    const matched = [];\n    while (elem.prev) {\n        elem = elem.prev;\n        if (isTag(elem))\n            matched.push(elem);\n    }\n    return matched;\n}, _removeDuplicates);\n/**\n * Gets all the preceding siblings up to but not including the element matched\n * by the selector, optionally filtered by another selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.pear').prevUntil('.apple');\n * //=> [<li class=\"orange\">Orange</li>]\n * ```\n *\n * @param selector - Selector for element to stop at.\n * @param filterSelector - If specified filter for siblings.\n * @returns The previous nodes.\n * @see {@link https://api.jquery.com/prevUntil/}\n */\nexport const prevUntil = _matchUntil((el) => prevElementSibling(el), _removeDuplicates);\n/**\n * Get the siblings of each element (excluding the element) in the set of\n * matched elements, optionally filtered by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.pear').siblings().length;\n * //=> 2\n *\n * $('.pear').siblings('.orange').length;\n * //=> 1\n * ```\n *\n * @param selector - If specified filter for siblings.\n * @returns The siblings.\n * @see {@link https://api.jquery.com/siblings/}\n */\nexport const siblings = _matcher((elem) => getSiblings(elem).filter((el) => isTag(el) && el !== elem), uniqueSort);\n/**\n * Gets the element children of each element in the set of matched elements.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('#fruits').children().length;\n * //=> 3\n *\n * $('#fruits').children('.pear').text();\n * //=> Pear\n * ```\n *\n * @param selector - If specified filter for children.\n * @returns The children.\n * @see {@link https://api.jquery.com/children/}\n */\nexport const children = _matcher((elem) => getChildren(elem).filter(isTag), _removeDuplicates);\n/**\n * Gets the children of each element in the set of matched elements, including\n * text and comment nodes.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('#fruits').contents().length;\n * //=> 3\n * ```\n *\n * @returns The children.\n * @see {@link https://api.jquery.com/contents/}\n */\nexport function contents() {\n    const elems = this.toArray().reduce((newElems, elem) => hasChildren(elem) ? newElems.concat(elem.children) : newElems, []);\n    return this._make(elems);\n}\n/**\n * Iterates over a cheerio object, executing a function for each matched\n * element. When the callback is fired, the function is fired in the context of\n * the DOM element, so `this` refers to the current element, which is equivalent\n * to the function parameter `element`. To break out of the `each` loop early,\n * return with `false`.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * const fruits = [];\n *\n * $('li').each(function (i, elem) {\n *   fruits[i] = $(this).text();\n * });\n *\n * fruits.join(', ');\n * //=> Apple, Orange, Pear\n * ```\n *\n * @param fn - Function to execute.\n * @returns The instance itself, useful for chaining.\n * @see {@link https://api.jquery.com/each/}\n */\nexport function each(fn) {\n    let i = 0;\n    const len = this.length;\n    while (i < len && fn.call(this[i], i, this[i]) !== false)\n        ++i;\n    return this;\n}\n/**\n * Pass each element in the current matched set through a function, producing a\n * new Cheerio object containing the return values. The function can return an\n * individual data item or an array of data items to be inserted into the\n * resulting set. If an array is returned, the elements inside the array are\n * inserted into the set. If the function returns null or undefined, no element\n * will be inserted.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('li')\n *   .map(function (i, el) {\n *     // this === el\n *     return $(this).text();\n *   })\n *   .toArray()\n *   .join(' ');\n * //=> \"apple orange pear\"\n * ```\n *\n * @param fn - Function to execute.\n * @returns The mapped elements, wrapped in a Cheerio collection.\n * @see {@link https://api.jquery.com/map/}\n */\nexport function map(fn) {\n    let elems = [];\n    for (let i = 0; i < this.length; i++) {\n        const el = this[i];\n        const val = fn.call(el, i, el);\n        if (val != null) {\n            elems = elems.concat(val);\n        }\n    }\n    return this._make(elems);\n}\n/**\n * Creates a function to test if a filter is matched.\n *\n * @param match - A filter.\n * @returns A function that determines if a filter has been matched.\n */\nfunction getFilterFn(match) {\n    if (typeof match === 'function') {\n        return (el, i) => match.call(el, i, el);\n    }\n    if (isCheerio(match)) {\n        return (el) => Array.prototype.includes.call(match, el);\n    }\n    return function (el) {\n        return match === el;\n    };\n}\nexport function filter(match) {\n    var _a;\n    return this._make(filterArray(this.toArray(), match, this.options.xmlMode, (_a = this._root) === null || _a === void 0 ? void 0 : _a[0]));\n}\nexport function filterArray(nodes, match, xmlMode, root) {\n    return typeof match === 'string'\n        ? select.filter(match, nodes, { xmlMode, root })\n        : nodes.filter(getFilterFn(match));\n}\n/**\n * Checks the current list of elements and returns `true` if _any_ of the\n * elements match the selector. If using an element or Cheerio selection,\n * returns `true` if _any_ of the elements match. If using a predicate function,\n * the function is executed in the context of the selected element, so `this`\n * refers to the current element.\n *\n * @category Attributes\n * @param selector - Selector for the selection.\n * @returns Whether or not the selector matches an element of the instance.\n * @see {@link https://api.jquery.com/is/}\n */\nexport function is(selector) {\n    const nodes = this.toArray();\n    return typeof selector === 'string'\n        ? select.some(nodes.filter(isTag), selector, this.options)\n        : selector\n            ? nodes.some(getFilterFn(selector))\n            : false;\n}\n/**\n * Remove elements from the set of matched elements. Given a Cheerio object that\n * represents a set of DOM elements, the `.not()` method constructs a new\n * Cheerio object from a subset of the matching elements. The supplied selector\n * is tested against each element; the elements that don't match the selector\n * will be included in the result.\n *\n * The `.not()` method can take a function as its argument in the same way that\n * `.filter()` does. Elements for which the function returns `true` are excluded\n * from the filtered set; all other elements are included.\n *\n * @category Traversing\n * @example <caption>Selector</caption>\n *\n * ```js\n * $('li').not('.apple').length;\n * //=> 2\n * ```\n *\n * @example <caption>Function</caption>\n *\n * ```js\n * $('li').not(function (i, el) {\n *   // this === el\n *   return $(this).attr('class') === 'orange';\n * }).length; //=> 2\n * ```\n *\n * @param match - Value to look for, following the rules above.\n * @param container - Optional node to filter instead.\n * @returns The filtered collection.\n * @see {@link https://api.jquery.com/not/}\n */\nexport function not(match) {\n    let nodes = this.toArray();\n    if (typeof match === 'string') {\n        const matches = new Set(select.filter(match, nodes, this.options));\n        nodes = nodes.filter((el) => !matches.has(el));\n    }\n    else {\n        const filterFn = getFilterFn(match);\n        nodes = nodes.filter((el, i) => !filterFn(el, i));\n    }\n    return this._make(nodes);\n}\n/**\n * Filters the set of matched elements to only those which have the given DOM\n * element as a descendant or which have a descendant that matches the given\n * selector. Equivalent to `.filter(':has(selector)')`.\n *\n * @category Traversing\n * @example <caption>Selector</caption>\n *\n * ```js\n * $('ul').has('.pear').attr('id');\n * //=> fruits\n * ```\n *\n * @example <caption>Element</caption>\n *\n * ```js\n * $('ul').has($('.pear')[0]).attr('id');\n * //=> fruits\n * ```\n *\n * @param selectorOrHaystack - Element to look for.\n * @returns The filtered collection.\n * @see {@link https://api.jquery.com/has/}\n */\nexport function has(selectorOrHaystack) {\n    return this.filter(typeof selectorOrHaystack === 'string'\n        ? // Using the `:has` selector here short-circuits searches.\n            `:has(${selectorOrHaystack})`\n        : (_, el) => this._make(el).find(selectorOrHaystack).length > 0);\n}\n/**\n * Will select the first element of a cheerio object.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('#fruits').children().first().text();\n * //=> Apple\n * ```\n *\n * @returns The first element.\n * @see {@link https://api.jquery.com/first/}\n */\nexport function first() {\n    return this.length > 1 ? this._make(this[0]) : this;\n}\n/**\n * Will select the last element of a cheerio object.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('#fruits').children().last().text();\n * //=> Pear\n * ```\n *\n * @returns The last element.\n * @see {@link https://api.jquery.com/last/}\n */\nexport function last() {\n    return this.length > 0 ? this._make(this[this.length - 1]) : this;\n}\n/**\n * Reduce the set of matched elements to the one at the specified index. Use\n * `.eq(-i)` to count backwards from the last selected element.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('li').eq(0).text();\n * //=> Apple\n *\n * $('li').eq(-1).text();\n * //=> Pear\n * ```\n *\n * @param i - Index of the element to select.\n * @returns The element at the `i`th position.\n * @see {@link https://api.jquery.com/eq/}\n */\nexport function eq(i) {\n    var _a;\n    i = +i;\n    // Use the first identity optimization if possible\n    if (i === 0 && this.length <= 1)\n        return this;\n    if (i < 0)\n        i = this.length + i;\n    return this._make((_a = this[i]) !== null && _a !== void 0 ? _a : []);\n}\nexport function get(i) {\n    if (i == null) {\n        return this.toArray();\n    }\n    return this[i < 0 ? this.length + i : i];\n}\n/**\n * Retrieve all the DOM elements contained in the jQuery set as an array.\n *\n * @example\n *\n * ```js\n * $('li').toArray();\n * //=> [ {...}, {...}, {...} ]\n * ```\n *\n * @returns The contained items.\n */\nexport function toArray() {\n    return Array.prototype.slice.call(this);\n}\n/**\n * Search for a given element from among the matched elements.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.pear').index();\n * //=> 2 $('.orange').index('li');\n * //=> 1\n * $('.apple').index($('#fruit, li'));\n * //=> 1\n * ```\n *\n * @param selectorOrNeedle - Element to look for.\n * @returns The index of the element.\n * @see {@link https://api.jquery.com/index/}\n */\nexport function index(selectorOrNeedle) {\n    let $haystack;\n    let needle;\n    if (selectorOrNeedle == null) {\n        $haystack = this.parent().children();\n        needle = this[0];\n    }\n    else if (typeof selectorOrNeedle === 'string') {\n        $haystack = this._make(selectorOrNeedle);\n        needle = this[0];\n    }\n    else {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        $haystack = this;\n        needle = isCheerio(selectorOrNeedle)\n            ? selectorOrNeedle[0]\n            : selectorOrNeedle;\n    }\n    return Array.prototype.indexOf.call($haystack, needle);\n}\n/**\n * Gets the elements matching the specified range (0-based position).\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('li').slice(1).eq(0).text();\n * //=> 'Orange'\n *\n * $('li').slice(1, 2).length;\n * //=> 1\n * ```\n *\n * @param start - A position at which the elements begin to be selected. If\n *   negative, it indicates an offset from the end of the set.\n * @param end - A position at which the elements stop being selected. If\n *   negative, it indicates an offset from the end of the set. If omitted, the\n *   range continues until the end of the set.\n * @returns The elements matching the specified range.\n * @see {@link https://api.jquery.com/slice/}\n */\nexport function slice(start, end) {\n    return this._make(Array.prototype.slice.call(this, start, end));\n}\n/**\n * End the most recent filtering operation in the current chain and return the\n * set of matched elements to its previous state.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('li').eq(0).end().length;\n * //=> 3\n * ```\n *\n * @returns The previous state of the set of matched elements.\n * @see {@link https://api.jquery.com/end/}\n */\nexport function end() {\n    var _a;\n    return (_a = this.prevObject) !== null && _a !== void 0 ? _a : this._make([]);\n}\n/**\n * Add elements to the set of matched elements.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.apple').add('.orange').length;\n * //=> 2\n * ```\n *\n * @param other - Elements to add.\n * @param context - Optionally the context of the new selection.\n * @returns The combined set.\n * @see {@link https://api.jquery.com/add/}\n */\nexport function add(other, context) {\n    const selection = this._make(other, context);\n    const contents = uniqueSort([...this.get(), ...selection.get()]);\n    return this._make(contents);\n}\n/**\n * Add the previous set of elements on the stack to the current set, optionally\n * filtered by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('li').eq(0).addBack('.orange').length;\n * //=> 2\n * ```\n *\n * @param selector - Selector for the elements to add.\n * @returns The combined set.\n * @see {@link https://api.jquery.com/addBack/}\n */\nexport function addBack(selector) {\n    return this.prevObject\n        ? this.add(selector ? this.prevObject.filter(selector) : this.prevObject)\n        : this;\n}\n//# sourceMappingURL=traversing.js.map"]},"metadata":{},"sourceType":"module"}