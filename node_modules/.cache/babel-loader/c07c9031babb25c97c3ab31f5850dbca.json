{"ast":null,"code":"import { html } from 'parse5';\nimport { Element, Document, ProcessingInstruction, Comment, Text, isDirective, isText, isComment, isTag } from 'domhandler';\n\nfunction createTextNode(value) {\n  return new Text(value);\n}\n\nfunction enquoteDoctypeId(id) {\n  const quote = id.includes('\"') ? \"'\" : '\"';\n  return quote + id + quote;\n}\n/** @internal */\n\n\nexport function serializeDoctypeContent(name, publicId, systemId) {\n  let str = '!DOCTYPE ';\n\n  if (name) {\n    str += name;\n  }\n\n  if (publicId) {\n    str += ` PUBLIC ${enquoteDoctypeId(publicId)}`;\n  } else if (systemId) {\n    str += ' SYSTEM';\n  }\n\n  if (systemId) {\n    str += ` ${enquoteDoctypeId(systemId)}`;\n  }\n\n  return str;\n}\nexport const adapter = {\n  // Re-exports from domhandler\n  isCommentNode: isComment,\n  isElementNode: isTag,\n  isTextNode: isText,\n\n  //Node construction\n  createDocument() {\n    const node = new Document([]);\n    node['x-mode'] = html.DOCUMENT_MODE.NO_QUIRKS;\n    return node;\n  },\n\n  createDocumentFragment() {\n    return new Document([]);\n  },\n\n  createElement(tagName, namespaceURI, attrs) {\n    const attribs = Object.create(null);\n    const attribsNamespace = Object.create(null);\n    const attribsPrefix = Object.create(null);\n\n    for (let i = 0; i < attrs.length; i++) {\n      const attrName = attrs[i].name;\n      attribs[attrName] = attrs[i].value;\n      attribsNamespace[attrName] = attrs[i].namespace;\n      attribsPrefix[attrName] = attrs[i].prefix;\n    }\n\n    const node = new Element(tagName, attribs, []);\n    node.namespace = namespaceURI;\n    node['x-attribsNamespace'] = attribsNamespace;\n    node['x-attribsPrefix'] = attribsPrefix;\n    return node;\n  },\n\n  createCommentNode(data) {\n    return new Comment(data);\n  },\n\n  //Tree mutation\n  appendChild(parentNode, newNode) {\n    const prev = parentNode.children[parentNode.children.length - 1];\n\n    if (prev) {\n      prev.next = newNode;\n      newNode.prev = prev;\n    }\n\n    parentNode.children.push(newNode);\n    newNode.parent = parentNode;\n  },\n\n  insertBefore(parentNode, newNode, referenceNode) {\n    const insertionIdx = parentNode.children.indexOf(referenceNode);\n    const {\n      prev\n    } = referenceNode;\n\n    if (prev) {\n      prev.next = newNode;\n      newNode.prev = prev;\n    }\n\n    referenceNode.prev = newNode;\n    newNode.next = referenceNode;\n    parentNode.children.splice(insertionIdx, 0, newNode);\n    newNode.parent = parentNode;\n  },\n\n  setTemplateContent(templateElement, contentElement) {\n    adapter.appendChild(templateElement, contentElement);\n  },\n\n  getTemplateContent(templateElement) {\n    return templateElement.children[0];\n  },\n\n  setDocumentType(document, name, publicId, systemId) {\n    const data = serializeDoctypeContent(name, publicId, systemId);\n    let doctypeNode = document.children.find(node => isDirective(node) && node.name === '!doctype');\n\n    if (doctypeNode) {\n      doctypeNode.data = data !== null && data !== void 0 ? data : null;\n    } else {\n      doctypeNode = new ProcessingInstruction('!doctype', data);\n      adapter.appendChild(document, doctypeNode);\n    }\n\n    doctypeNode['x-name'] = name !== null && name !== void 0 ? name : undefined;\n    doctypeNode['x-publicId'] = publicId !== null && publicId !== void 0 ? publicId : undefined;\n    doctypeNode['x-systemId'] = systemId !== null && systemId !== void 0 ? systemId : undefined;\n  },\n\n  setDocumentMode(document, mode) {\n    document['x-mode'] = mode;\n  },\n\n  getDocumentMode(document) {\n    return document['x-mode'];\n  },\n\n  detachNode(node) {\n    if (node.parent) {\n      const idx = node.parent.children.indexOf(node);\n      const {\n        prev,\n        next\n      } = node;\n      node.prev = null;\n      node.next = null;\n\n      if (prev) {\n        prev.next = next;\n      }\n\n      if (next) {\n        next.prev = prev;\n      }\n\n      node.parent.children.splice(idx, 1);\n      node.parent = null;\n    }\n  },\n\n  insertText(parentNode, text) {\n    const lastChild = parentNode.children[parentNode.children.length - 1];\n\n    if (lastChild && isText(lastChild)) {\n      lastChild.data += text;\n    } else {\n      adapter.appendChild(parentNode, createTextNode(text));\n    }\n  },\n\n  insertTextBefore(parentNode, text, referenceNode) {\n    const prevNode = parentNode.children[parentNode.children.indexOf(referenceNode) - 1];\n\n    if (prevNode && isText(prevNode)) {\n      prevNode.data += text;\n    } else {\n      adapter.insertBefore(parentNode, createTextNode(text), referenceNode);\n    }\n  },\n\n  adoptAttributes(recipient, attrs) {\n    for (let i = 0; i < attrs.length; i++) {\n      const attrName = attrs[i].name;\n\n      if (typeof recipient.attribs[attrName] === 'undefined') {\n        recipient.attribs[attrName] = attrs[i].value;\n        recipient['x-attribsNamespace'][attrName] = attrs[i].namespace;\n        recipient['x-attribsPrefix'][attrName] = attrs[i].prefix;\n      }\n    }\n  },\n\n  //Tree traversing\n  getFirstChild(node) {\n    return node.children[0];\n  },\n\n  getChildNodes(node) {\n    return node.children;\n  },\n\n  getParentNode(node) {\n    return node.parent;\n  },\n\n  getAttrList(element) {\n    return element.attributes;\n  },\n\n  //Node data\n  getTagName(element) {\n    return element.name;\n  },\n\n  getNamespaceURI(element) {\n    return element.namespace;\n  },\n\n  getTextNodeContent(textNode) {\n    return textNode.data;\n  },\n\n  getCommentNodeContent(commentNode) {\n    return commentNode.data;\n  },\n\n  getDocumentTypeNodeName(doctypeNode) {\n    var _a;\n\n    return (_a = doctypeNode['x-name']) !== null && _a !== void 0 ? _a : '';\n  },\n\n  getDocumentTypeNodePublicId(doctypeNode) {\n    var _a;\n\n    return (_a = doctypeNode['x-publicId']) !== null && _a !== void 0 ? _a : '';\n  },\n\n  getDocumentTypeNodeSystemId(doctypeNode) {\n    var _a;\n\n    return (_a = doctypeNode['x-systemId']) !== null && _a !== void 0 ? _a : '';\n  },\n\n  //Node types\n  isDocumentTypeNode(node) {\n    return isDirective(node) && node.name === '!doctype';\n  },\n\n  // Source code location\n  setNodeSourceCodeLocation(node, location) {\n    if (location) {\n      node.startIndex = location.startOffset;\n      node.endIndex = location.endOffset;\n    }\n\n    node.sourceCodeLocation = location;\n  },\n\n  getNodeSourceCodeLocation(node) {\n    return node.sourceCodeLocation;\n  },\n\n  updateNodeSourceCodeLocation(node, endLocation) {\n    if (endLocation.endOffset != null) node.endIndex = endLocation.endOffset;\n    node.sourceCodeLocation = { ...node.sourceCodeLocation,\n      ...endLocation\n    };\n  }\n\n};","map":{"version":3,"sources":["C:/Users/zoya/Downloads/gdsc_website-master/gdsc_website-master/node_modules/parse5-htmlparser2-tree-adapter/dist/index.js"],"names":["html","Element","Document","ProcessingInstruction","Comment","Text","isDirective","isText","isComment","isTag","createTextNode","value","enquoteDoctypeId","id","quote","includes","serializeDoctypeContent","name","publicId","systemId","str","adapter","isCommentNode","isElementNode","isTextNode","createDocument","node","DOCUMENT_MODE","NO_QUIRKS","createDocumentFragment","createElement","tagName","namespaceURI","attrs","attribs","Object","create","attribsNamespace","attribsPrefix","i","length","attrName","namespace","prefix","createCommentNode","data","appendChild","parentNode","newNode","prev","children","next","push","parent","insertBefore","referenceNode","insertionIdx","indexOf","splice","setTemplateContent","templateElement","contentElement","getTemplateContent","setDocumentType","document","doctypeNode","find","undefined","setDocumentMode","mode","getDocumentMode","detachNode","idx","insertText","text","lastChild","insertTextBefore","prevNode","adoptAttributes","recipient","getFirstChild","getChildNodes","getParentNode","getAttrList","element","attributes","getTagName","getNamespaceURI","getTextNodeContent","textNode","getCommentNodeContent","commentNode","getDocumentTypeNodeName","_a","getDocumentTypeNodePublicId","getDocumentTypeNodeSystemId","isDocumentTypeNode","setNodeSourceCodeLocation","location","startIndex","startOffset","endIndex","endOffset","sourceCodeLocation","getNodeSourceCodeLocation","updateNodeSourceCodeLocation","endLocation"],"mappings":"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","sourcesContent":["import { html } from 'parse5';\nimport { Element, Document, ProcessingInstruction, Comment, Text, isDirective, isText, isComment, isTag, } from 'domhandler';\nfunction createTextNode(value) {\n    return new Text(value);\n}\nfunction enquoteDoctypeId(id) {\n    const quote = id.includes('\"') ? \"'\" : '\"';\n    return quote + id + quote;\n}\n/** @internal */\nexport function serializeDoctypeContent(name, publicId, systemId) {\n    let str = '!DOCTYPE ';\n    if (name) {\n        str += name;\n    }\n    if (publicId) {\n        str += ` PUBLIC ${enquoteDoctypeId(publicId)}`;\n    }\n    else if (systemId) {\n        str += ' SYSTEM';\n    }\n    if (systemId) {\n        str += ` ${enquoteDoctypeId(systemId)}`;\n    }\n    return str;\n}\nexport const adapter = {\n    // Re-exports from domhandler\n    isCommentNode: isComment,\n    isElementNode: isTag,\n    isTextNode: isText,\n    //Node construction\n    createDocument() {\n        const node = new Document([]);\n        node['x-mode'] = html.DOCUMENT_MODE.NO_QUIRKS;\n        return node;\n    },\n    createDocumentFragment() {\n        return new Document([]);\n    },\n    createElement(tagName, namespaceURI, attrs) {\n        const attribs = Object.create(null);\n        const attribsNamespace = Object.create(null);\n        const attribsPrefix = Object.create(null);\n        for (let i = 0; i < attrs.length; i++) {\n            const attrName = attrs[i].name;\n            attribs[attrName] = attrs[i].value;\n            attribsNamespace[attrName] = attrs[i].namespace;\n            attribsPrefix[attrName] = attrs[i].prefix;\n        }\n        const node = new Element(tagName, attribs, []);\n        node.namespace = namespaceURI;\n        node['x-attribsNamespace'] = attribsNamespace;\n        node['x-attribsPrefix'] = attribsPrefix;\n        return node;\n    },\n    createCommentNode(data) {\n        return new Comment(data);\n    },\n    //Tree mutation\n    appendChild(parentNode, newNode) {\n        const prev = parentNode.children[parentNode.children.length - 1];\n        if (prev) {\n            prev.next = newNode;\n            newNode.prev = prev;\n        }\n        parentNode.children.push(newNode);\n        newNode.parent = parentNode;\n    },\n    insertBefore(parentNode, newNode, referenceNode) {\n        const insertionIdx = parentNode.children.indexOf(referenceNode);\n        const { prev } = referenceNode;\n        if (prev) {\n            prev.next = newNode;\n            newNode.prev = prev;\n        }\n        referenceNode.prev = newNode;\n        newNode.next = referenceNode;\n        parentNode.children.splice(insertionIdx, 0, newNode);\n        newNode.parent = parentNode;\n    },\n    setTemplateContent(templateElement, contentElement) {\n        adapter.appendChild(templateElement, contentElement);\n    },\n    getTemplateContent(templateElement) {\n        return templateElement.children[0];\n    },\n    setDocumentType(document, name, publicId, systemId) {\n        const data = serializeDoctypeContent(name, publicId, systemId);\n        let doctypeNode = document.children.find((node) => isDirective(node) && node.name === '!doctype');\n        if (doctypeNode) {\n            doctypeNode.data = data !== null && data !== void 0 ? data : null;\n        }\n        else {\n            doctypeNode = new ProcessingInstruction('!doctype', data);\n            adapter.appendChild(document, doctypeNode);\n        }\n        doctypeNode['x-name'] = name !== null && name !== void 0 ? name : undefined;\n        doctypeNode['x-publicId'] = publicId !== null && publicId !== void 0 ? publicId : undefined;\n        doctypeNode['x-systemId'] = systemId !== null && systemId !== void 0 ? systemId : undefined;\n    },\n    setDocumentMode(document, mode) {\n        document['x-mode'] = mode;\n    },\n    getDocumentMode(document) {\n        return document['x-mode'];\n    },\n    detachNode(node) {\n        if (node.parent) {\n            const idx = node.parent.children.indexOf(node);\n            const { prev, next } = node;\n            node.prev = null;\n            node.next = null;\n            if (prev) {\n                prev.next = next;\n            }\n            if (next) {\n                next.prev = prev;\n            }\n            node.parent.children.splice(idx, 1);\n            node.parent = null;\n        }\n    },\n    insertText(parentNode, text) {\n        const lastChild = parentNode.children[parentNode.children.length - 1];\n        if (lastChild && isText(lastChild)) {\n            lastChild.data += text;\n        }\n        else {\n            adapter.appendChild(parentNode, createTextNode(text));\n        }\n    },\n    insertTextBefore(parentNode, text, referenceNode) {\n        const prevNode = parentNode.children[parentNode.children.indexOf(referenceNode) - 1];\n        if (prevNode && isText(prevNode)) {\n            prevNode.data += text;\n        }\n        else {\n            adapter.insertBefore(parentNode, createTextNode(text), referenceNode);\n        }\n    },\n    adoptAttributes(recipient, attrs) {\n        for (let i = 0; i < attrs.length; i++) {\n            const attrName = attrs[i].name;\n            if (typeof recipient.attribs[attrName] === 'undefined') {\n                recipient.attribs[attrName] = attrs[i].value;\n                recipient['x-attribsNamespace'][attrName] = attrs[i].namespace;\n                recipient['x-attribsPrefix'][attrName] = attrs[i].prefix;\n            }\n        }\n    },\n    //Tree traversing\n    getFirstChild(node) {\n        return node.children[0];\n    },\n    getChildNodes(node) {\n        return node.children;\n    },\n    getParentNode(node) {\n        return node.parent;\n    },\n    getAttrList(element) {\n        return element.attributes;\n    },\n    //Node data\n    getTagName(element) {\n        return element.name;\n    },\n    getNamespaceURI(element) {\n        return element.namespace;\n    },\n    getTextNodeContent(textNode) {\n        return textNode.data;\n    },\n    getCommentNodeContent(commentNode) {\n        return commentNode.data;\n    },\n    getDocumentTypeNodeName(doctypeNode) {\n        var _a;\n        return (_a = doctypeNode['x-name']) !== null && _a !== void 0 ? _a : '';\n    },\n    getDocumentTypeNodePublicId(doctypeNode) {\n        var _a;\n        return (_a = doctypeNode['x-publicId']) !== null && _a !== void 0 ? _a : '';\n    },\n    getDocumentTypeNodeSystemId(doctypeNode) {\n        var _a;\n        return (_a = doctypeNode['x-systemId']) !== null && _a !== void 0 ? _a : '';\n    },\n    //Node types\n    isDocumentTypeNode(node) {\n        return isDirective(node) && node.name === '!doctype';\n    },\n    // Source code location\n    setNodeSourceCodeLocation(node, location) {\n        if (location) {\n            node.startIndex = location.startOffset;\n            node.endIndex = location.endOffset;\n        }\n        node.sourceCodeLocation = location;\n    },\n    getNodeSourceCodeLocation(node) {\n        return node.sourceCodeLocation;\n    },\n    updateNodeSourceCodeLocation(node, endLocation) {\n        if (endLocation.endOffset != null)\n            node.endIndex = endLocation.endOffset;\n        node.sourceCodeLocation = {\n            ...node.sourceCodeLocation,\n            ...endLocation,\n        };\n    },\n};\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}