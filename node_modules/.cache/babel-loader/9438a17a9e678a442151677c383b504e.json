{"ast":null,"code":"import * as Attributes from './api/attributes.js';\nimport * as Traversing from './api/traversing.js';\nimport * as Manipulation from './api/manipulation.js';\nimport * as Css from './api/css.js';\nimport * as Forms from './api/forms.js';\nexport class Cheerio {\n  /**\n   * Instance of cheerio. Methods are specified in the modules. Usage of this\n   * constructor is not recommended. Please use `$.load` instead.\n   *\n   * @private\n   * @param elements - The new selection.\n   * @param root - Sets the root node.\n   * @param options - Options for the instance.\n   */\n  constructor(elements, root, options) {\n    this.length = 0;\n    this.options = options;\n    this._root = root;\n\n    if (elements) {\n      for (let idx = 0; idx < elements.length; idx++) {\n        this[idx] = elements[idx];\n      }\n\n      this.length = elements.length;\n    }\n  }\n\n}\n/** Set a signature of the object. */\n\nCheerio.prototype.cheerio = '[cheerio object]';\n/*\n * Make cheerio an array-like object\n */\n\nCheerio.prototype.splice = Array.prototype.splice; // Support for (const element of $(...)) iteration:\n\nCheerio.prototype[Symbol.iterator] = Array.prototype[Symbol.iterator]; // Plug in the API\n\nObject.assign(Cheerio.prototype, Attributes, Traversing, Manipulation, Css, Forms);","map":{"version":3,"sources":["cheerio.ts"],"names":[],"mappings":"AAIA,OAAO,KAAK,UAAZ,MAA4B,qBAA5B;AACA,OAAO,KAAK,UAAZ,MAA4B,qBAA5B;AACA,OAAO,KAAK,YAAZ,MAA8B,uBAA9B;AACA,OAAO,KAAK,GAAZ,MAAqB,cAArB;AACA,OAAO,KAAK,KAAZ,MAAuB,gBAAvB;AAQA,OAAM,MAAgB,OAAhB,CAAuB;AAY3B;;;;;;;;AAQG;AACH,EAAA,WAAA,CACE,QADF,EAEE,IAFF,EAGE,OAHF,EAG0B;AAvB1B,SAAA,MAAA,GAAS,CAAT;AAyBE,SAAK,OAAL,GAAe,OAAf;AACA,SAAK,KAAL,GAAa,IAAb;;AAEA,QAAI,QAAJ,EAAc;AACZ,WAAK,IAAI,GAAG,GAAG,CAAf,EAAkB,GAAG,GAAG,QAAQ,CAAC,MAAjC,EAAyC,GAAG,EAA5C,EAAgD;AAC9C,aAAK,GAAL,IAAY,QAAQ,CAAC,GAAD,CAApB;AACD;;AACD,WAAK,MAAL,GAAc,QAAQ,CAAC,MAAvB;AACD;AACF;;AAnC0B;AAyF7B;;AACA,OAAO,CAAC,SAAR,CAAkB,OAAlB,GAA4B,kBAA5B;AAEA;;AAEG;;AACH,OAAO,CAAC,SAAR,CAAkB,MAAlB,GAA2B,KAAK,CAAC,SAAN,CAAgB,MAA3C,C,CAEA;;AACA,OAAO,CAAC,SAAR,CAAkB,MAAM,CAAC,QAAzB,IAAqC,KAAK,CAAC,SAAN,CAAgB,MAAM,CAAC,QAAvB,CAArC,C,CAEA;;AACA,MAAM,CAAC,MAAP,CACE,OAAO,CAAC,SADV,EAEE,UAFF,EAGE,UAHF,EAIE,YAJF,EAKE,GALF,EAME,KANF","sourceRoot":"https://raw.githubusercontent.com/cheeriojs/cheerio/d1cbc66d53392ce8bf6cd0068f675836372d2bf3/src/","sourcesContent":["import * as Attributes from './api/attributes.js';\nimport * as Traversing from './api/traversing.js';\nimport * as Manipulation from './api/manipulation.js';\nimport * as Css from './api/css.js';\nimport * as Forms from './api/forms.js';\nexport class Cheerio {\n    /**\n     * Instance of cheerio. Methods are specified in the modules. Usage of this\n     * constructor is not recommended. Please use `$.load` instead.\n     *\n     * @private\n     * @param elements - The new selection.\n     * @param root - Sets the root node.\n     * @param options - Options for the instance.\n     */\n    constructor(elements, root, options) {\n        this.length = 0;\n        this.options = options;\n        this._root = root;\n        if (elements) {\n            for (let idx = 0; idx < elements.length; idx++) {\n                this[idx] = elements[idx];\n            }\n            this.length = elements.length;\n        }\n    }\n}\n/** Set a signature of the object. */\nCheerio.prototype.cheerio = '[cheerio object]';\n/*\n * Make cheerio an array-like object\n */\nCheerio.prototype.splice = Array.prototype.splice;\n// Support for (const element of $(...)) iteration:\nCheerio.prototype[Symbol.iterator] = Array.prototype[Symbol.iterator];\n// Plug in the API\nObject.assign(Cheerio.prototype, Attributes, Traversing, Manipulation, Css, Forms);\n//# sourceMappingURL=cheerio.js.map"]},"metadata":{},"sourceType":"module"}