{"ast":null,"code":"/**\n * Aliases are pseudos that are expressed as selectors.\n */\nexport const aliases = {\n  // Links\n  \"any-link\": \":is(a, area, link)[href]\",\n  link: \":any-link:not(:visited)\",\n  // Forms\n  // https://html.spec.whatwg.org/multipage/scripting.html#disabled-elements\n  disabled: `:is(\n        :is(button, input, select, textarea, optgroup, option)[disabled],\n        optgroup[disabled] > option,\n        fieldset[disabled]:not(fieldset[disabled] legend:first-of-type *)\n    )`,\n  enabled: \":not(:disabled)\",\n  checked: \":is(:is(input[type=radio], input[type=checkbox])[checked], option:selected)\",\n  required: \":is(input, select, textarea)[required]\",\n  optional: \":is(input, select, textarea):not([required])\",\n  // JQuery extensions\n  // https://html.spec.whatwg.org/multipage/form-elements.html#concept-option-selectedness\n  selected: \"option:is([selected], select:not([multiple]):not(:has(> option[selected])) > :first-of-type)\",\n  checkbox: \"[type=checkbox]\",\n  file: \"[type=file]\",\n  password: \"[type=password]\",\n  radio: \"[type=radio]\",\n  reset: \"[type=reset]\",\n  image: \"[type=image]\",\n  submit: \"[type=submit]\",\n  parent: \":not(:empty)\",\n  header: \":is(h1, h2, h3, h4, h5, h6)\",\n  button: \":is(button, input[type=button])\",\n  input: \":is(input, textarea, select, button)\",\n  text: \"input:is(:not([type!='']), [type=text])\"\n};","map":{"version":3,"sources":["pseudo-selectors/aliases.ts"],"names":[],"mappings":"AAAA;;AAEG;AACH,OAAO,MAAM,OAAO,GAA2B;AAC3C;AAEA,cAAY,0BAH+B;AAI3C,EAAA,IAAI,EAAE,yBAJqC;AAM3C;AAEA;AACA,EAAA,QAAQ,EAAE;;;;AAIR,MAbyC;AAc3C,EAAA,OAAO,EAAE,iBAdkC;AAe3C,EAAA,OAAO,EACH,6EAhBuC;AAiB3C,EAAA,QAAQ,EAAE,wCAjBiC;AAkB3C,EAAA,QAAQ,EAAE,8CAlBiC;AAoB3C;AAEA;AACA,EAAA,QAAQ,EACJ,8FAxBuC;AA0B3C,EAAA,QAAQ,EAAE,iBA1BiC;AA2B3C,EAAA,IAAI,EAAE,aA3BqC;AA4B3C,EAAA,QAAQ,EAAE,iBA5BiC;AA6B3C,EAAA,KAAK,EAAE,cA7BoC;AA8B3C,EAAA,KAAK,EAAE,cA9BoC;AA+B3C,EAAA,KAAK,EAAE,cA/BoC;AAgC3C,EAAA,MAAM,EAAE,eAhCmC;AAkC3C,EAAA,MAAM,EAAE,cAlCmC;AAmC3C,EAAA,MAAM,EAAE,6BAnCmC;AAqC3C,EAAA,MAAM,EAAE,iCArCmC;AAsC3C,EAAA,KAAK,EAAE,sCAtCoC;AAuC3C,EAAA,IAAI,EAAE;AAvCqC,CAAxC","sourceRoot":"https://raw.githubusercontent.com/fb55/css-select/0f0725a9dfeddd2fdb54eda9656cdbab5bbf6be6/src/","sourcesContent":["/**\n * Aliases are pseudos that are expressed as selectors.\n */\nexport const aliases = {\n    // Links\n    \"any-link\": \":is(a, area, link)[href]\",\n    link: \":any-link:not(:visited)\",\n    // Forms\n    // https://html.spec.whatwg.org/multipage/scripting.html#disabled-elements\n    disabled: `:is(\n        :is(button, input, select, textarea, optgroup, option)[disabled],\n        optgroup[disabled] > option,\n        fieldset[disabled]:not(fieldset[disabled] legend:first-of-type *)\n    )`,\n    enabled: \":not(:disabled)\",\n    checked: \":is(:is(input[type=radio], input[type=checkbox])[checked], option:selected)\",\n    required: \":is(input, select, textarea)[required]\",\n    optional: \":is(input, select, textarea):not([required])\",\n    // JQuery extensions\n    // https://html.spec.whatwg.org/multipage/form-elements.html#concept-option-selectedness\n    selected: \"option:is([selected], select:not([multiple]):not(:has(> option[selected])) > :first-of-type)\",\n    checkbox: \"[type=checkbox]\",\n    file: \"[type=file]\",\n    password: \"[type=password]\",\n    radio: \"[type=radio]\",\n    reset: \"[type=reset]\",\n    image: \"[type=image]\",\n    submit: \"[type=submit]\",\n    parent: \":not(:empty)\",\n    header: \":is(h1, h2, h3, h4, h5, h6)\",\n    button: \":is(button, input[type=button])\",\n    input: \":is(input, textarea, select, button)\",\n    text: \"input:is(:not([type!='']), [type=text])\",\n};\n//# sourceMappingURL=aliases.js.map"]},"metadata":{},"sourceType":"module"}